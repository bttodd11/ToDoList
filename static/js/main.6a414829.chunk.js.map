{"version":3,"sources":["Tasks/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["Tasks","useState","task","setTask","toDoList","setToDoList","className","onSubmit","e","preventDefault","length","prevValue","onChange","target","value","placeholder","type","start","map","list","onClick","splice","indexOf","removeTask","App","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA0DeA,G,MAtDD,WAAM,MAIMC,mBAAS,IAJf,mBAIXC,EAJW,KAILC,EAJK,OAKcF,mBAAS,IALvB,mBAKXG,EALW,KAKDC,EALC,KA6BlB,OACE,gCACE,8BACE,uBAAMC,UAAU,WAAWC,SAxBnB,SAACC,GACbA,EAAEC,iBACEP,EAAKQ,OAAS,GAEhBL,GAAY,SAAAM,GAAS,4BAAQP,GAAR,CAAkBF,QAoBrC,UACE,sBAAMI,UAAU,aAAhB,yBACA,uBAAOM,SAhBG,SAACJ,GACjBL,EAAQK,EAAEK,OAAOC,QAemBC,YAAY,SAE1C,wBAAQC,KAAK,SAAb,oBAGiB,IAApBZ,EAASM,OACR,8BACE,oBAAIO,MAAM,IAAV,SACGb,EAASc,KAAI,SAAAC,GAAI,OAChB,qBAAIC,QAAS,kBApBR,SAAClB,GAChBE,EAASiB,OAAOjB,EAASkB,QAAQpB,GAAO,GACxCG,EAAY,YAAID,IAkBamB,CAAWJ,IAAOb,UAAU,WAA/C,UAA2Da,EAA3D,cAIN,qBAAKb,UAAU,UAAf,mCCnCOkB,EAbH,WAEV,OACE,qBAAKC,GAAG,YAAR,SACE,sBAAKnB,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,wBACE,cAAC,EAAD,UCGKoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a414829.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from 'react';\nimport './Tasks.css';\n\nconst Tasks = () => {\n\n\n  // Using useState to set the task and also to create my to do list \n  const [task, setTask] = useState(\"\");\n  const [toDoList, setToDoList] = useState([]);\n\n  // This function will add my task to my list \n  let addTask = (e) => {\n    e.preventDefault();\n    if (task.length > 0) {\n\n      setToDoList(prevValue => [...toDoList, task])\n    }\n\n  }\n\n  // This function will set the state of my inputed task\n  let currentTask = (e) => {\n    setTask(e.target.value)\n  }\n\n  // This function will remove your task from the list\n  let removeTask = (task) => {\n    toDoList.splice(toDoList.indexOf(task), 1)\n    setToDoList([...toDoList])\n  }\n\n\n  return (\n    <div>\n      <div>\n        <form className=\"inputBox\" onSubmit={addTask}>\n          <span className=\"enterTitle\">Enter Task </span>\n          <input onChange={currentTask} placeholder=\"Task\">\n          </input>\n          <button type=\"submit\">+</button>\n        </form>\n      </div>\n      {toDoList.length !== 0 ?\n        <div>\n          <ol start=\"1\">\n            {toDoList.map(list => (\n              <li onClick={() => removeTask(list)} className=\"taskList\">{list} </li>\n            ))}\n          </ol>\n        </div> :\n        <div className=\"noTasks\">No Task Assigned</div>\n      }\n    </div>\n  )\n\n}\n\nexport default Tasks;\n","import './App.css';\nimport Tasks from \"./Tasks/Tasks\";\n\nconst App = () =>{\n\n  return(\n    <div id=\"appBorder\">\n      <div className=\"taskSection\">\n        <h2 className=\"taskTitle\">To Do List</h2>\n          <Tasks />\n          </div>\n      </div>\n  )\n\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}